var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = GaussMLE","category":"page"},{"location":"#GaussMLE","page":"Home","title":"GaussMLE","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for GaussMLE.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [GaussMLE]","category":"page"},{"location":"#GaussMLE.center_of_mass_2d-Tuple{Int64, Array{<:Real}}","page":"Home","title":"GaussMLE.center_of_mass_2d","text":"center_of_mass_2d(sz::Int, data::Array{<:Real})\n\nCompute the center of mass of a square 2D data array.\n\n\n\n\n\n","category":"method"},{"location":"#GaussMLE.compute_alpha-NTuple{4, Real}","page":"Home","title":"GaussMLE.compute_alpha","text":"compute_alpha(z::Real, Ax::Real, Bx::Real, d::Real)\n\nCompute the alpha value based on the given parameters.\n\n\n\n\n\n","category":"method"},{"location":"#GaussMLE.derivative_alpha_z-NTuple{4, Real}","page":"Home","title":"GaussMLE.derivative_alpha_z","text":"derivative_alpha_z(z::Real, Ax::Real, Bx::Real, d::Real)\n\nCompute the derivative of alpha with respect to z.\n\n\n\n\n\n","category":"method"},{"location":"#GaussMLE.derivative_integral_gaussian_1d-Tuple{Int64, Vararg{Real, 4}}","page":"Home","title":"GaussMLE.derivative_integral_gaussian_1d","text":"derivative_integral_gaussian_1d(ii::Int, x::Real, sigma::Real, N::Real, PSFy::Real)\n\nCompute the derivative of the integral of a 1D Gaussian function.\n\n\n\n\n\n","category":"method"},{"location":"#GaussMLE.derivative_integral_gaussian_1d_sigma-Tuple{Int64, Vararg{Real, 4}}","page":"Home","title":"GaussMLE.derivative_integral_gaussian_1d_sigma","text":"derivative_integral_gaussian_1d_sigma(ii::Int, x::Real, Sx::Real, N::Real, PSFy::Real)\n\nCompute the derivative of the integral of a 1D Gaussian function with respect to sigma.\n\n\n\n\n\n","category":"method"},{"location":"#GaussMLE.derivative_integral_gaussian_2d_sigma-Tuple{Int64, Int64, Vararg{Real, 6}}","page":"Home","title":"GaussMLE.derivative_integral_gaussian_2d_sigma","text":"derivative_integral_gaussian_2d_sigma(ii::Int, jj::Int, x::Real, y::Real, S::Real, N::Real, PSFx::Real, PSFy::Real)\n\nCompute the derivative of the integral of a 2D Gaussian function with respect to sigma.\n\n\n\n\n\n","category":"method"},{"location":"#GaussMLE.derivative_integral_gaussian_2d_z-Tuple{Int64, Int64, Any, Real, Real, Real, Real, Real, Real, Real, Real, Any, Any}","page":"Home","title":"GaussMLE.derivative_integral_gaussian_2d_z","text":"derivative_integral_gaussian_2d_z(ii::Int, jj::Int, theta, PSFSigma_x::Real, PSFSigma_y::Real, Ax::Real, Ay::Real, Bx::Real, By::Real, gamma::Real, d::Real, dudt, d2udt2)\n\nCompute the derivative of the integral of a 2D Gaussian function with respect to z.\n\n\n\n\n\n","category":"method"},{"location":"#GaussMLE.gaussian_max_min_2d-Tuple{Int64, Real, Array{<:Real}}","page":"Home","title":"GaussMLE.gaussian_max_min_2d","text":"gaussian_max_min_2d(sz::Int, sigma::Real, data::Array{<:Real})\n\nCompute the maximum and minimum values after applying a Gaussian filter to a 2D data array.\n\n\n\n\n\n","category":"method"},{"location":"#GaussMLE.integral_gaussian_1d-Tuple{Int64, Real, Real}","page":"Home","title":"GaussMLE.integral_gaussian_1d","text":"integral_gaussian_1d(ii::Int, position::Real, sigma::Real)\n\nCalculate the integral of a 1D Gaussian function.\n\n\n\n\n\n","category":"method"},{"location":"#GaussMLE.matrix_inverse!-Union{Tuple{T}, Tuple{Matrix{T}, Int64}} where T<:Real","page":"Home","title":"GaussMLE.matrix_inverse!","text":"matrix_inverse!(m::Array{T, 2}, sz::Int) where T <: Real\n\nCompute the inverse of a matrix m with size sz.\n\nThis implementation is designed to be compatible with both CPU and GPU computations. Note: This is a custom implementation. Consider using Julia's built-in inv function for standard use-cases on the CPU.\n\nThis function modifies the input matrix m in place as part of the computation. If the original matrix data needs to be preserved, make sure to provide a copy of the matrix to this function.\n\nArguments\n\nm: Input matrix to be inverted. This matrix will be modified in place.\nsz: The size of the matrix.\n\nReturns\n\nm_inverse: The inverse of the input matrix.\nm_inverse_diag: The diagonal elements of the inverse matrix.\n\n\n\n\n\n","category":"method"},{"location":"#GaussMLE.second_derivative_alpha_z-NTuple{4, Real}","page":"Home","title":"GaussMLE.second_derivative_alpha_z","text":"second_derivative_alpha_z(z::Real, Ax::Real, Bx::Real, d::Real)\n\nCompute the second derivative of alpha with respect to z.\n\n\n\n\n\n","category":"method"}]
}
